/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.david.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class StationInformation extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 4973602121886089621L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"StationInformation\",\"namespace\":\"com.david.avro\",\"fields\":[{\"name\":\"stationId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"externalId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"shortName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"lat\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"lon\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"rentalMethods0\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"rentalMethods1\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"capacity\",\"type\":\"int\"},{\"name\":\"eightdHasKeyDispenser\",\"type\":\"boolean\"},{\"name\":\"hasKiosk\",\"type\":\"boolean\"},{\"name\":\"googleApiGeocodingJson\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<StationInformation> ENCODER =
      new BinaryMessageEncoder<StationInformation>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<StationInformation> DECODER =
      new BinaryMessageDecoder<StationInformation>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<StationInformation> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<StationInformation> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<StationInformation>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this StationInformation to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a StationInformation from a ByteBuffer. */
  public static StationInformation fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.String stationId;
  @Deprecated public java.lang.String externalId;
  @Deprecated public java.lang.String name;
  @Deprecated public java.lang.String shortName;
  @Deprecated public java.lang.String lat;
  @Deprecated public java.lang.String lon;
  @Deprecated public java.lang.String rentalMethods0;
  @Deprecated public java.lang.String rentalMethods1;
  @Deprecated public int capacity;
  @Deprecated public boolean eightdHasKeyDispenser;
  @Deprecated public boolean hasKiosk;
  @Deprecated public java.lang.String googleApiGeocodingJson;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public StationInformation() {}

  /**
   * All-args constructor.
   * @param stationId The new value for stationId
   * @param externalId The new value for externalId
   * @param name The new value for name
   * @param shortName The new value for shortName
   * @param lat The new value for lat
   * @param lon The new value for lon
   * @param rentalMethods0 The new value for rentalMethods0
   * @param rentalMethods1 The new value for rentalMethods1
   * @param capacity The new value for capacity
   * @param eightdHasKeyDispenser The new value for eightdHasKeyDispenser
   * @param hasKiosk The new value for hasKiosk
   * @param googleApiGeocodingJson The new value for googleApiGeocodingJson
   */
  public StationInformation(java.lang.String stationId, java.lang.String externalId, java.lang.String name, java.lang.String shortName, java.lang.String lat, java.lang.String lon, java.lang.String rentalMethods0, java.lang.String rentalMethods1, java.lang.Integer capacity, java.lang.Boolean eightdHasKeyDispenser, java.lang.Boolean hasKiosk, java.lang.String googleApiGeocodingJson) {
    this.stationId = stationId;
    this.externalId = externalId;
    this.name = name;
    this.shortName = shortName;
    this.lat = lat;
    this.lon = lon;
    this.rentalMethods0 = rentalMethods0;
    this.rentalMethods1 = rentalMethods1;
    this.capacity = capacity;
    this.eightdHasKeyDispenser = eightdHasKeyDispenser;
    this.hasKiosk = hasKiosk;
    this.googleApiGeocodingJson = googleApiGeocodingJson;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return stationId;
    case 1: return externalId;
    case 2: return name;
    case 3: return shortName;
    case 4: return lat;
    case 5: return lon;
    case 6: return rentalMethods0;
    case 7: return rentalMethods1;
    case 8: return capacity;
    case 9: return eightdHasKeyDispenser;
    case 10: return hasKiosk;
    case 11: return googleApiGeocodingJson;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: stationId = (java.lang.String)value$; break;
    case 1: externalId = (java.lang.String)value$; break;
    case 2: name = (java.lang.String)value$; break;
    case 3: shortName = (java.lang.String)value$; break;
    case 4: lat = (java.lang.String)value$; break;
    case 5: lon = (java.lang.String)value$; break;
    case 6: rentalMethods0 = (java.lang.String)value$; break;
    case 7: rentalMethods1 = (java.lang.String)value$; break;
    case 8: capacity = (java.lang.Integer)value$; break;
    case 9: eightdHasKeyDispenser = (java.lang.Boolean)value$; break;
    case 10: hasKiosk = (java.lang.Boolean)value$; break;
    case 11: googleApiGeocodingJson = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'stationId' field.
   * @return The value of the 'stationId' field.
   */
  public java.lang.String getStationId() {
    return stationId;
  }

  /**
   * Sets the value of the 'stationId' field.
   * @param value the value to set.
   */
  public void setStationId(java.lang.String value) {
    this.stationId = value;
  }

  /**
   * Gets the value of the 'externalId' field.
   * @return The value of the 'externalId' field.
   */
  public java.lang.String getExternalId() {
    return externalId;
  }

  /**
   * Sets the value of the 'externalId' field.
   * @param value the value to set.
   */
  public void setExternalId(java.lang.String value) {
    this.externalId = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'shortName' field.
   * @return The value of the 'shortName' field.
   */
  public java.lang.String getShortName() {
    return shortName;
  }

  /**
   * Sets the value of the 'shortName' field.
   * @param value the value to set.
   */
  public void setShortName(java.lang.String value) {
    this.shortName = value;
  }

  /**
   * Gets the value of the 'lat' field.
   * @return The value of the 'lat' field.
   */
  public java.lang.String getLat() {
    return lat;
  }

  /**
   * Sets the value of the 'lat' field.
   * @param value the value to set.
   */
  public void setLat(java.lang.String value) {
    this.lat = value;
  }

  /**
   * Gets the value of the 'lon' field.
   * @return The value of the 'lon' field.
   */
  public java.lang.String getLon() {
    return lon;
  }

  /**
   * Sets the value of the 'lon' field.
   * @param value the value to set.
   */
  public void setLon(java.lang.String value) {
    this.lon = value;
  }

  /**
   * Gets the value of the 'rentalMethods0' field.
   * @return The value of the 'rentalMethods0' field.
   */
  public java.lang.String getRentalMethods0() {
    return rentalMethods0;
  }

  /**
   * Sets the value of the 'rentalMethods0' field.
   * @param value the value to set.
   */
  public void setRentalMethods0(java.lang.String value) {
    this.rentalMethods0 = value;
  }

  /**
   * Gets the value of the 'rentalMethods1' field.
   * @return The value of the 'rentalMethods1' field.
   */
  public java.lang.String getRentalMethods1() {
    return rentalMethods1;
  }

  /**
   * Sets the value of the 'rentalMethods1' field.
   * @param value the value to set.
   */
  public void setRentalMethods1(java.lang.String value) {
    this.rentalMethods1 = value;
  }

  /**
   * Gets the value of the 'capacity' field.
   * @return The value of the 'capacity' field.
   */
  public java.lang.Integer getCapacity() {
    return capacity;
  }

  /**
   * Sets the value of the 'capacity' field.
   * @param value the value to set.
   */
  public void setCapacity(java.lang.Integer value) {
    this.capacity = value;
  }

  /**
   * Gets the value of the 'eightdHasKeyDispenser' field.
   * @return The value of the 'eightdHasKeyDispenser' field.
   */
  public java.lang.Boolean getEightdHasKeyDispenser() {
    return eightdHasKeyDispenser;
  }

  /**
   * Sets the value of the 'eightdHasKeyDispenser' field.
   * @param value the value to set.
   */
  public void setEightdHasKeyDispenser(java.lang.Boolean value) {
    this.eightdHasKeyDispenser = value;
  }

  /**
   * Gets the value of the 'hasKiosk' field.
   * @return The value of the 'hasKiosk' field.
   */
  public java.lang.Boolean getHasKiosk() {
    return hasKiosk;
  }

  /**
   * Sets the value of the 'hasKiosk' field.
   * @param value the value to set.
   */
  public void setHasKiosk(java.lang.Boolean value) {
    this.hasKiosk = value;
  }

  /**
   * Gets the value of the 'googleApiGeocodingJson' field.
   * @return The value of the 'googleApiGeocodingJson' field.
   */
  public java.lang.String getGoogleApiGeocodingJson() {
    return googleApiGeocodingJson;
  }

  /**
   * Sets the value of the 'googleApiGeocodingJson' field.
   * @param value the value to set.
   */
  public void setGoogleApiGeocodingJson(java.lang.String value) {
    this.googleApiGeocodingJson = value;
  }

  /**
   * Creates a new StationInformation RecordBuilder.
   * @return A new StationInformation RecordBuilder
   */
  public static com.david.avro.StationInformation.Builder newBuilder() {
    return new com.david.avro.StationInformation.Builder();
  }

  /**
   * Creates a new StationInformation RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new StationInformation RecordBuilder
   */
  public static com.david.avro.StationInformation.Builder newBuilder(com.david.avro.StationInformation.Builder other) {
    return new com.david.avro.StationInformation.Builder(other);
  }

  /**
   * Creates a new StationInformation RecordBuilder by copying an existing StationInformation instance.
   * @param other The existing instance to copy.
   * @return A new StationInformation RecordBuilder
   */
  public static com.david.avro.StationInformation.Builder newBuilder(com.david.avro.StationInformation other) {
    return new com.david.avro.StationInformation.Builder(other);
  }

  /**
   * RecordBuilder for StationInformation instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<StationInformation>
    implements org.apache.avro.data.RecordBuilder<StationInformation> {

    private java.lang.String stationId;
    private java.lang.String externalId;
    private java.lang.String name;
    private java.lang.String shortName;
    private java.lang.String lat;
    private java.lang.String lon;
    private java.lang.String rentalMethods0;
    private java.lang.String rentalMethods1;
    private int capacity;
    private boolean eightdHasKeyDispenser;
    private boolean hasKiosk;
    private java.lang.String googleApiGeocodingJson;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.david.avro.StationInformation.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.stationId)) {
        this.stationId = data().deepCopy(fields()[0].schema(), other.stationId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.externalId)) {
        this.externalId = data().deepCopy(fields()[1].schema(), other.externalId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.name)) {
        this.name = data().deepCopy(fields()[2].schema(), other.name);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.shortName)) {
        this.shortName = data().deepCopy(fields()[3].schema(), other.shortName);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.lat)) {
        this.lat = data().deepCopy(fields()[4].schema(), other.lat);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.lon)) {
        this.lon = data().deepCopy(fields()[5].schema(), other.lon);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.rentalMethods0)) {
        this.rentalMethods0 = data().deepCopy(fields()[6].schema(), other.rentalMethods0);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.rentalMethods1)) {
        this.rentalMethods1 = data().deepCopy(fields()[7].schema(), other.rentalMethods1);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.capacity)) {
        this.capacity = data().deepCopy(fields()[8].schema(), other.capacity);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.eightdHasKeyDispenser)) {
        this.eightdHasKeyDispenser = data().deepCopy(fields()[9].schema(), other.eightdHasKeyDispenser);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.hasKiosk)) {
        this.hasKiosk = data().deepCopy(fields()[10].schema(), other.hasKiosk);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.googleApiGeocodingJson)) {
        this.googleApiGeocodingJson = data().deepCopy(fields()[11].schema(), other.googleApiGeocodingJson);
        fieldSetFlags()[11] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing StationInformation instance
     * @param other The existing instance to copy.
     */
    private Builder(com.david.avro.StationInformation other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.stationId)) {
        this.stationId = data().deepCopy(fields()[0].schema(), other.stationId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.externalId)) {
        this.externalId = data().deepCopy(fields()[1].schema(), other.externalId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.name)) {
        this.name = data().deepCopy(fields()[2].schema(), other.name);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.shortName)) {
        this.shortName = data().deepCopy(fields()[3].schema(), other.shortName);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.lat)) {
        this.lat = data().deepCopy(fields()[4].schema(), other.lat);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.lon)) {
        this.lon = data().deepCopy(fields()[5].schema(), other.lon);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.rentalMethods0)) {
        this.rentalMethods0 = data().deepCopy(fields()[6].schema(), other.rentalMethods0);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.rentalMethods1)) {
        this.rentalMethods1 = data().deepCopy(fields()[7].schema(), other.rentalMethods1);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.capacity)) {
        this.capacity = data().deepCopy(fields()[8].schema(), other.capacity);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.eightdHasKeyDispenser)) {
        this.eightdHasKeyDispenser = data().deepCopy(fields()[9].schema(), other.eightdHasKeyDispenser);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.hasKiosk)) {
        this.hasKiosk = data().deepCopy(fields()[10].schema(), other.hasKiosk);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.googleApiGeocodingJson)) {
        this.googleApiGeocodingJson = data().deepCopy(fields()[11].schema(), other.googleApiGeocodingJson);
        fieldSetFlags()[11] = true;
      }
    }

    /**
      * Gets the value of the 'stationId' field.
      * @return The value.
      */
    public java.lang.String getStationId() {
      return stationId;
    }

    /**
      * Sets the value of the 'stationId' field.
      * @param value The value of 'stationId'.
      * @return This builder.
      */
    public com.david.avro.StationInformation.Builder setStationId(java.lang.String value) {
      validate(fields()[0], value);
      this.stationId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'stationId' field has been set.
      * @return True if the 'stationId' field has been set, false otherwise.
      */
    public boolean hasStationId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'stationId' field.
      * @return This builder.
      */
    public com.david.avro.StationInformation.Builder clearStationId() {
      stationId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'externalId' field.
      * @return The value.
      */
    public java.lang.String getExternalId() {
      return externalId;
    }

    /**
      * Sets the value of the 'externalId' field.
      * @param value The value of 'externalId'.
      * @return This builder.
      */
    public com.david.avro.StationInformation.Builder setExternalId(java.lang.String value) {
      validate(fields()[1], value);
      this.externalId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'externalId' field has been set.
      * @return True if the 'externalId' field has been set, false otherwise.
      */
    public boolean hasExternalId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'externalId' field.
      * @return This builder.
      */
    public com.david.avro.StationInformation.Builder clearExternalId() {
      externalId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }

    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.david.avro.StationInformation.Builder setName(java.lang.String value) {
      validate(fields()[2], value);
      this.name = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public com.david.avro.StationInformation.Builder clearName() {
      name = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'shortName' field.
      * @return The value.
      */
    public java.lang.String getShortName() {
      return shortName;
    }

    /**
      * Sets the value of the 'shortName' field.
      * @param value The value of 'shortName'.
      * @return This builder.
      */
    public com.david.avro.StationInformation.Builder setShortName(java.lang.String value) {
      validate(fields()[3], value);
      this.shortName = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'shortName' field has been set.
      * @return True if the 'shortName' field has been set, false otherwise.
      */
    public boolean hasShortName() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'shortName' field.
      * @return This builder.
      */
    public com.david.avro.StationInformation.Builder clearShortName() {
      shortName = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'lat' field.
      * @return The value.
      */
    public java.lang.String getLat() {
      return lat;
    }

    /**
      * Sets the value of the 'lat' field.
      * @param value The value of 'lat'.
      * @return This builder.
      */
    public com.david.avro.StationInformation.Builder setLat(java.lang.String value) {
      validate(fields()[4], value);
      this.lat = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'lat' field has been set.
      * @return True if the 'lat' field has been set, false otherwise.
      */
    public boolean hasLat() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'lat' field.
      * @return This builder.
      */
    public com.david.avro.StationInformation.Builder clearLat() {
      lat = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'lon' field.
      * @return The value.
      */
    public java.lang.String getLon() {
      return lon;
    }

    /**
      * Sets the value of the 'lon' field.
      * @param value The value of 'lon'.
      * @return This builder.
      */
    public com.david.avro.StationInformation.Builder setLon(java.lang.String value) {
      validate(fields()[5], value);
      this.lon = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'lon' field has been set.
      * @return True if the 'lon' field has been set, false otherwise.
      */
    public boolean hasLon() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'lon' field.
      * @return This builder.
      */
    public com.david.avro.StationInformation.Builder clearLon() {
      lon = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'rentalMethods0' field.
      * @return The value.
      */
    public java.lang.String getRentalMethods0() {
      return rentalMethods0;
    }

    /**
      * Sets the value of the 'rentalMethods0' field.
      * @param value The value of 'rentalMethods0'.
      * @return This builder.
      */
    public com.david.avro.StationInformation.Builder setRentalMethods0(java.lang.String value) {
      validate(fields()[6], value);
      this.rentalMethods0 = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'rentalMethods0' field has been set.
      * @return True if the 'rentalMethods0' field has been set, false otherwise.
      */
    public boolean hasRentalMethods0() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'rentalMethods0' field.
      * @return This builder.
      */
    public com.david.avro.StationInformation.Builder clearRentalMethods0() {
      rentalMethods0 = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'rentalMethods1' field.
      * @return The value.
      */
    public java.lang.String getRentalMethods1() {
      return rentalMethods1;
    }

    /**
      * Sets the value of the 'rentalMethods1' field.
      * @param value The value of 'rentalMethods1'.
      * @return This builder.
      */
    public com.david.avro.StationInformation.Builder setRentalMethods1(java.lang.String value) {
      validate(fields()[7], value);
      this.rentalMethods1 = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'rentalMethods1' field has been set.
      * @return True if the 'rentalMethods1' field has been set, false otherwise.
      */
    public boolean hasRentalMethods1() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'rentalMethods1' field.
      * @return This builder.
      */
    public com.david.avro.StationInformation.Builder clearRentalMethods1() {
      rentalMethods1 = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'capacity' field.
      * @return The value.
      */
    public java.lang.Integer getCapacity() {
      return capacity;
    }

    /**
      * Sets the value of the 'capacity' field.
      * @param value The value of 'capacity'.
      * @return This builder.
      */
    public com.david.avro.StationInformation.Builder setCapacity(int value) {
      validate(fields()[8], value);
      this.capacity = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'capacity' field has been set.
      * @return True if the 'capacity' field has been set, false otherwise.
      */
    public boolean hasCapacity() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'capacity' field.
      * @return This builder.
      */
    public com.david.avro.StationInformation.Builder clearCapacity() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'eightdHasKeyDispenser' field.
      * @return The value.
      */
    public java.lang.Boolean getEightdHasKeyDispenser() {
      return eightdHasKeyDispenser;
    }

    /**
      * Sets the value of the 'eightdHasKeyDispenser' field.
      * @param value The value of 'eightdHasKeyDispenser'.
      * @return This builder.
      */
    public com.david.avro.StationInformation.Builder setEightdHasKeyDispenser(boolean value) {
      validate(fields()[9], value);
      this.eightdHasKeyDispenser = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'eightdHasKeyDispenser' field has been set.
      * @return True if the 'eightdHasKeyDispenser' field has been set, false otherwise.
      */
    public boolean hasEightdHasKeyDispenser() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'eightdHasKeyDispenser' field.
      * @return This builder.
      */
    public com.david.avro.StationInformation.Builder clearEightdHasKeyDispenser() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'hasKiosk' field.
      * @return The value.
      */
    public java.lang.Boolean getHasKiosk() {
      return hasKiosk;
    }

    /**
      * Sets the value of the 'hasKiosk' field.
      * @param value The value of 'hasKiosk'.
      * @return This builder.
      */
    public com.david.avro.StationInformation.Builder setHasKiosk(boolean value) {
      validate(fields()[10], value);
      this.hasKiosk = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'hasKiosk' field has been set.
      * @return True if the 'hasKiosk' field has been set, false otherwise.
      */
    public boolean hasHasKiosk() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'hasKiosk' field.
      * @return This builder.
      */
    public com.david.avro.StationInformation.Builder clearHasKiosk() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'googleApiGeocodingJson' field.
      * @return The value.
      */
    public java.lang.String getGoogleApiGeocodingJson() {
      return googleApiGeocodingJson;
    }

    /**
      * Sets the value of the 'googleApiGeocodingJson' field.
      * @param value The value of 'googleApiGeocodingJson'.
      * @return This builder.
      */
    public com.david.avro.StationInformation.Builder setGoogleApiGeocodingJson(java.lang.String value) {
      validate(fields()[11], value);
      this.googleApiGeocodingJson = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'googleApiGeocodingJson' field has been set.
      * @return True if the 'googleApiGeocodingJson' field has been set, false otherwise.
      */
    public boolean hasGoogleApiGeocodingJson() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'googleApiGeocodingJson' field.
      * @return This builder.
      */
    public com.david.avro.StationInformation.Builder clearGoogleApiGeocodingJson() {
      googleApiGeocodingJson = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public StationInformation build() {
      try {
        StationInformation record = new StationInformation();
        record.stationId = fieldSetFlags()[0] ? this.stationId : (java.lang.String) defaultValue(fields()[0]);
        record.externalId = fieldSetFlags()[1] ? this.externalId : (java.lang.String) defaultValue(fields()[1]);
        record.name = fieldSetFlags()[2] ? this.name : (java.lang.String) defaultValue(fields()[2]);
        record.shortName = fieldSetFlags()[3] ? this.shortName : (java.lang.String) defaultValue(fields()[3]);
        record.lat = fieldSetFlags()[4] ? this.lat : (java.lang.String) defaultValue(fields()[4]);
        record.lon = fieldSetFlags()[5] ? this.lon : (java.lang.String) defaultValue(fields()[5]);
        record.rentalMethods0 = fieldSetFlags()[6] ? this.rentalMethods0 : (java.lang.String) defaultValue(fields()[6]);
        record.rentalMethods1 = fieldSetFlags()[7] ? this.rentalMethods1 : (java.lang.String) defaultValue(fields()[7]);
        record.capacity = fieldSetFlags()[8] ? this.capacity : (java.lang.Integer) defaultValue(fields()[8]);
        record.eightdHasKeyDispenser = fieldSetFlags()[9] ? this.eightdHasKeyDispenser : (java.lang.Boolean) defaultValue(fields()[9]);
        record.hasKiosk = fieldSetFlags()[10] ? this.hasKiosk : (java.lang.Boolean) defaultValue(fields()[10]);
        record.googleApiGeocodingJson = fieldSetFlags()[11] ? this.googleApiGeocodingJson : (java.lang.String) defaultValue(fields()[11]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<StationInformation>
    WRITER$ = (org.apache.avro.io.DatumWriter<StationInformation>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<StationInformation>
    READER$ = (org.apache.avro.io.DatumReader<StationInformation>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
